# -*- coding: utf-8 -*-
"""Untitled7.ipynb


Original file is located at
    https://colab.research.google.com/drive/1WSqtn4d-MLidNPcCBELVb8R4_4EUSMi8
"""

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.svm import SVC
from sklearn.ensemble import GradientBoostingClassifier
from sklearn.metrics import accuracy_score, classification_report

# ---- Step 1: Load Dataset ----
df1 = pd.read_csv("/content/cleaned_data.csv")
df2 = pd.read_csv("/content/standardized_data.csv")
df3 = pd.read_csv("/content/normalized_data.csv")

# ---- Step 2: Combine datasets ----
df = pd.concat([df1, df2, df3], ignore_index=True)

# ---- Step 3: Prepare features and labels ----
X = df.iloc[:, :-1].values  # All columns except last one
y = df.iloc[:, -1].values   # Last column as label

# ---- Step 4: Train/Test split ----
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

# ---- Step 5: SVM Model ----
svm_model = SVC(kernel='rbf', C=1.0, gamma='scale', random_state=42)
svm_model.fit(X_train, y_train)
svm_preds = svm_model.predict(X_test)

# ---- Step 6: Gradient Boosting Model ----
gb_model = GradientBoostingClassifier(n_estimators=100, learning_rate=0.1, max_depth=3, random_state=42)
gb_model.fit(X_train, y_train)
gb_preds = gb_model.predict(X_test)

# ---- Step 7: Evaluation ----
print("=== SVM Results ===")
print("Accuracy:", accuracy_score(y_test, svm_preds))
print(classification_report(y_test, svm_preds))

print("\n=== Gradient Boosting Results ===")
print("Accuracy:", accuracy_score(y_test, gb_preds))
print(classification_report(y_test, gb_preds))
